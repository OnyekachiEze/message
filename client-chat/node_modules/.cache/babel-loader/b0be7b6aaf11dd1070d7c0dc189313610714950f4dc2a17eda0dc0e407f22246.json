{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\message\\\\client-chat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport GroupChat from './GroupChat';\n\n// Sample dummy groups data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst groups = [{\n  name: 'developers',\n  members: ['Alice', 'Bob', 'Charlie']\n}, {\n  name: 'designers',\n  members: ['Dave', 'Eva']\n}];\nexport default function App() {\n  _s();\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [messages, setMessages] = useState({}); // { groupName: [messages] }\n\n  // Send text message\n  const handleSendMessage = text => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n    const newMessage = {\n      from: 'me',\n      type: 'text',\n      text,\n      timestamp: Date.now()\n    };\n    setMessages(prev => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage]\n    }));\n  };\n\n  // Send file (image or generic)\n  const handleSendFile = file => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n    const isImage = file.type.startsWith('image/');\n    const newMessage = {\n      from: 'me',\n      type: isImage ? 'image' : 'file',\n      file,\n      timestamp: Date.now()\n    };\n    setMessages(prev => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage]\n    }));\n  };\n\n  // Send audio recording\n  const handleSendAudio = audioBlob => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n    const newMessage = {\n      from: 'me',\n      type: 'audio',\n      file: audioBlob,\n      timestamp: Date.now()\n    };\n    setMessages(prev => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: !selectedGroup ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Select a Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedGroup(group),\n            className: \"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\",\n            children: [group.name, \" (\", group.members.length, \" members)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, group.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GroupChat, {\n      group: selectedGroup,\n      messages: messages[selectedGroup.name] || [],\n      onSendMessage: handleSendMessage,\n      onSendFile: handleSendFile,\n      onSendAudio: handleSendAudio,\n      onBack: () => setSelectedGroup(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3EYFF18uo9yK8dcfJPTcL+/xmzM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GroupChat","jsxDEV","_jsxDEV","groups","name","members","App","_s","selectedGroup","setSelectedGroup","messages","setMessages","handleSendMessage","text","chatId","newMessage","from","type","timestamp","Date","now","prev","handleSendFile","file","isImage","startsWith","handleSendAudio","audioBlob","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","onClick","length","onSendMessage","onSendFile","onSendAudio","onBack","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/message/client-chat/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport GroupChat from './GroupChat';\n\n// Sample dummy groups data\nconst groups = [\n  { name: 'developers', members: ['Alice', 'Bob', 'Charlie'] },\n  { name: 'designers', members: ['Dave', 'Eva'] },\n];\n\nexport default function App() {\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [messages, setMessages] = useState({}); // { groupName: [messages] }\n\n  // Send text message\n  const handleSendMessage = (text) => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n\n    const newMessage = {\n      from: 'me',\n      type: 'text',\n      text,\n      timestamp: Date.now(),\n    };\n\n    setMessages((prev) => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage],\n    }));\n  };\n\n  // Send file (image or generic)\n  const handleSendFile = (file) => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n    const isImage = file.type.startsWith('image/');\n\n    const newMessage = {\n      from: 'me',\n      type: isImage ? 'image' : 'file',\n      file,\n      timestamp: Date.now(),\n    };\n\n    setMessages((prev) => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage],\n    }));\n  };\n\n  // Send audio recording\n  const handleSendAudio = (audioBlob) => {\n    if (!selectedGroup) return;\n    const chatId = selectedGroup.name;\n\n    const newMessage = {\n      from: 'me',\n      type: 'audio',\n      file: audioBlob,\n      timestamp: Date.now(),\n    };\n\n    setMessages((prev) => ({\n      ...prev,\n      [chatId]: [...(prev[chatId] || []), newMessage],\n    }));\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      {!selectedGroup ? (\n        <div className=\"p-4\">\n          <h1 className=\"text-xl font-bold mb-4\">Select a Group Chat</h1>\n          <ul>\n            {groups.map((group) => (\n              <li key={group.name} className=\"mb-2\">\n                <button\n                  onClick={() => setSelectedGroup(group)}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\"\n                >\n                  {group.name} ({group.members.length} members)\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <GroupChat\n          group={selectedGroup}\n          messages={messages[selectedGroup.name] || []}\n          onSendMessage={handleSendMessage}\n          onSendFile={handleSendFile}\n          onSendAudio={handleSendAudio}\n          onBack={() => setSelectedGroup(null)}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}